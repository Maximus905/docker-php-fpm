#!/bin/bash

set -e

# set Timezone
ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

#if env LISTEN_SOCKET is not empty - set socket listener
if [ -n "$LISTEN_SOCKET" ]; then
	userName=$(getent passwd $SOCKET_USER_NAME | cut -d: -f1)
	userId=$(getent passwd $SOCKET_USER_UID | cut -d: -f3)
	group=$(getent group $SOCKET_GROUP_NAME | cut -d: -f1)
	groupId=$(getent group $SOCKET_GROUP_UID | cut -d: -f3)
	
	if [ $userName == $SOCKET_USER_NAME -a $userId == $SOCKET_USER_UID ]; then
		echo "User $SOCKET_USER_NAME (UID $SOCKET_USER_UID) already exists"
	elif [ -n "$userName" ]; then
		echo "Error! Can't create user $SOCKET_USER_NAME. User already exists"
		exit 1
	elif [ -n "$userId" ]; then
		echo "Error! Can't create user $SOCKET_USER_NAME. User ID $SOCKET_USER_UID already using"
		exit 1
	else
		adduser --uid $SOCKET_USER_UID --system --no-create-home --gid $SOCKET_GROUP_UID $SOCKET_USER_NAME
	fi

	if [ $group == $SOCKET_GROUP_NAME -a $groupId == $SOCKET_GROUP_UID ]; then
		echo "Group $SOCKET_GROUP_NAME (UID $SOCKET_GROUP_UID) already exists"
	elif [ -n "$group" ]; then
		echo "Error! Can't create group $SOCKET_GROUP_NAME. Group already exists"
		exit 1
	elif [ -n "$groupId" ]; then
		echo "Error! Can't create group $SOCKET_GROUP_NAME. Group ID $SOCKET_GROUP_UID already using"
		exit 1
	else
		addgroup --gid $SOCKET_GROUP_UID $SOCKET_GROUP_NAME
	fi

	sed -i \
        -e "s/^listen =/;listen =/g" \
        -e "s/^user = www-data/;user = www-data/g" \
        -e "s/^group = www-data/;group = www-data/g" \
    	$fpm_conf \
    && sed -i -e "/^listen/d" $zz_docker_conf \
    && echo "user = $SOCKET_USER_NAME" >> $zz_docker_conf \
    && echo "group = $SOCKET_GROUP_NAME" >> $zz_docker_conf \
    && echo "listen = $SOCKET_PATH" >> $zz_docker_conf \
    && echo "listen.mode = 0666" >> $zz_docker_conf \
    && echo "listen.owner = $SOCKET_USER_NAME" >> $zz_docker_conf \
    && echo "listen.group = $SOCKET_GROUP_NAME" >> $zz_docker_conf
fi
# invoke parent entrypoint
exec docker-php-entrypoint "$@"